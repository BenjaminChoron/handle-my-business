# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI/CD Pipeline

on:
  push:
    branches: ['main', 'improve-CI-CD']
  pull_request:
    branches: ['main']

jobs:
  quality:
    name: Quality Check
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install -g prettier @trivago/prettier-plugin-sort-imports typescript
          npm install --no-package-lock
        env:
          CI: true

      - name: Check code style
        run: npm run prettier && git diff --exit-code

      - name: Lint code
        run: npm run lint

      - name: Type check
        run: npm run typecheck || tsc --noEmit

      - name: Create test env file
        run: |
          cat > .env.test << EOF
          JWT_SECRET=test_secret_key
          JWT_EXPIRES_IN=1h
          DATABASE_HOST=localhost
          DATABASE_PORT=5432
          DATABASE_USERNAME=postgres
          DATABASE_PASSWORD=postgres
          DATABASE_NAME=test_db
          EOF
      - name: Run tests
        run: npm test -- --coverage

      # - name: Run e2e tests
      #   run: npm run test:e2e

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  security:
    name: Security Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --no-package-lock

      - name: Run security audit
        run: |
          npm audit
          if [ $? -eq 0 ]; then
            echo "No vulnerabilities found"
          else
            echo "Warning: Vulnerabilities found, but continuing build"
            exit 0
          fi
  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [quality, security]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --no-package-lock

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
